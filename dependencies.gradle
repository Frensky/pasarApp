ext {
    // Libraries Version
    daggerVersion = "2.15"
    okHttpVersion = "3.10.0"
    retrofitVersion = "2.6.0"
    multidexVersion = "2.0.1"
    kotlinCoroutinesVersion = "1.3.1"
    gsonVersion = '2.8.6'
    roomVersion = "2.1.0"
    chuckerVersion = "3.0.1"
    chuckVersion = "1.1.0"

    //Testing
    mockitoVersion = "3.3.3"
    mockitoAndroidVersion = "2.7.22"
    jUnitVersion = "4.12"
    androidJUnitVersion = "1.1.1"
    androidEspressoVersion = "3.2.0"
    androidXTestCoreVersion = "1.0.0"
    androidXCoreTestingVersion = "2.1.0"

    // Libraries
    dagger = "com.google.dagger:dagger:$daggerVersion"
    daggerCompiler = "com.google.dagger:dagger-compiler:$daggerVersion"

    //Kotlin Library
    kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kotlinCoroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    kotlinCoroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
    kotlinCoroutinesTest = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"

    //Room Library
    room = "androidx.room:room-runtime:$roomVersion"
    roomCompiler = "androidx.room:room-compiler:$roomVersion"
    // optional - Kotlin Extensions and Coroutines support for Room
    roomKotlin = "androidx.room:room-ktx:$roomVersion"
    // Test helpers
    roomTest = "androidx.room:room-testing:$roomVersion"

    //Google Library
    gson = "com.google.code.gson:gson:$gsonVersion"

    //Retrofit
    retrofit = "com.squareup.retrofit2:retrofit:$retrofitVersion"
    retrofitGson = "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    loggingInterceptor = "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    okHttp = "com.squareup.okhttp3:okhttp:$okHttpVersion"
    chuckerDebug = "com.readystatesoftware.chuck:library:$chuckVersion"
    chuckerRelease = "com.readystatesoftware.chuck:library:$chuckVersion"
    //chuckerDebug = "com.github.ChuckerTeam.Chucker:library:$chuckerVersion"
    //chuckerRelease = "com.github.ChuckerTeam.Chucker:library-no-op:$chuckerVersion"

    //Logging
    timber = "com.jakewharton.timber:timber:4.7.1"

    //openCsv
    openCsv = "com.opencsv:opencsv:4.6"


    // Test Libraries
    jUnit = "junit:junit:$jUnitVersion"
    mockitoAndroid = "org.mockito:mockito-android:$mockitoVersion"
    mockitoCore = "org.mockito:mockito-core:$mockitoVersion"

    androidJUnit = "androidx.test.ext:junit:$androidJUnitVersion"
    androidEspresso = "androidx.test.espresso:espresso-core:$androidEspressoVersion"
    androidXTestCore = "androidx.test:core:$androidXTestCoreVersion"
    androidArchitectureCoreTesting = "androidx.arch.core:core-testing:$androidXCoreTestingVersion"

    domainDependencies = {

        implementation "$kotlin"
        implementation "$kotlinCoroutines"

        implementation "$dagger"
        implementation "$gson"

        kapt "$daggerCompiler"

        testImplementation "$kotlinCoroutines"
        testImplementation "$kotlinCoroutinesTest"

        testImplementation "$jUnit"
        testImplementation "$mockitoCore"
        testImplementation "$androidArchitectureCoreTesting"

        androidTestImplementation "$androidJUnit"
        androidTestImplementation "$androidEspresso"
    }

    dataDependencies = {

        implementation "$kotlin"
        implementation "$kotlinCoroutines"

        implementation "$dagger"
        kapt "$daggerCompiler"

        implementation "$room"
        kapt "$roomCompiler"
        implementation "$roomKotlin"

        implementation "$retrofit"
        implementation "$retrofitGson"

        implementation "$loggingInterceptor"

        implementation "$openCsv"

        debugImplementation "$chuckerDebug"
        releaseImplementation "$chuckerDebug"
        
        compile group: 'com.opencsv', name: 'opencsv', version: '5.2'

        testImplementation "$kotlinCoroutines"
        testImplementation "$kotlinCoroutinesTest"

        testImplementation "$roomTest"

        testImplementation "$jUnit"
        testImplementation "$mockitoCore"
        testImplementation "$androidArchitectureCoreTesting"

        androidTestImplementation "$androidJUnit"
        androidTestImplementation "$androidEspresso"
    }
}